(function() {var implementors = {};
implementors["bio"] = [{"text":"impl&lt;__T0, __T1&gt; <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.QueryTooShort.html\" title=\"struct bio::pattern_matching::pssm::errors::QueryTooShort\">QueryTooShort</a>&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::QueryTooShort"]},{"text":"impl <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.InconsistentLen.html\" title=\"struct bio::pattern_matching::pssm::errors::InconsistentLen\">InconsistentLen</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::InconsistentLen"]},{"text":"impl&lt;__T0&gt; <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.InvalidMonomer.html\" title=\"struct bio::pattern_matching::pssm::errors::InvalidMonomer\">InvalidMonomer</a>&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::InvalidMonomer"]},{"text":"impl <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.EmptyMotif.html\" title=\"struct bio::pattern_matching::pssm::errors::EmptyMotif\">EmptyMotif</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::EmptyMotif"]},{"text":"impl <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.NullMotif.html\" title=\"struct bio::pattern_matching::pssm::errors::NullMotif\">NullMotif</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::NullMotif"]},{"text":"impl&lt;__T0, __T1&gt; <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/pattern_matching/pssm/errors/struct.InvalidPseudos.html\" title=\"struct bio::pattern_matching::pssm::errors::InvalidPseudos\">InvalidPseudos</a>&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/pattern_matching/pssm/errors/enum.Error.html\" title=\"enum bio::pattern_matching::pssm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bio::pattern_matching::pssm::errors::InvalidPseudos"]},{"text":"impl&lt;__T0, __T1, __T2, __T3, __T4&gt; <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/stats/hmm/errors/enum.Error.html\" title=\"enum bio::stats::hmm::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/stats/hmm/errors/struct.InvalidDimension.html\" title=\"struct bio::stats::hmm::errors::InvalidDimension\">InvalidDimension</a>&lt;__T0, __T1, __T2, __T3, __T4&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/stats/hmm/errors/enum.Error.html\" title=\"enum bio::stats::hmm::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T2: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T3: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T4: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bio::stats::hmm::errors::InvalidDimension"]},{"text":"impl&lt;__T0&gt; <a class=\"trait\" href=\"snafu/trait.IntoError.html\" title=\"trait snafu::IntoError\">IntoError</a>&lt;<a class=\"enum\" href=\"bio/stats/probs/errors/enum.Error.html\" title=\"enum bio::stats::probs::errors::Error\">Error</a>&gt; for <a class=\"struct\" href=\"bio/stats/probs/errors/struct.InvalidProb.html\" title=\"struct bio::stats::probs::errors::InvalidProb\">InvalidProb</a>&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"enum\" href=\"bio/stats/probs/errors/enum.Error.html\" title=\"enum bio::stats::probs::errors::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> + <a class=\"trait\" href=\"snafu/trait.ErrorCompat.html\" title=\"trait snafu::ErrorCompat\">ErrorCompat</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.f64.html\">f64</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bio::stats::probs::errors::InvalidProb"]}];
implementors["snafu"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()