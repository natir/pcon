var searchIndex = new Map(JSON.parse('[["pcon",{"t":"IICCCCCCCCCCFFPPFPGPGFPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPGPPPIPNNNNNNNNNNNNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNPPPPFGNNNNNNNNNNNNNNNNNNNNNN","n":["CountType","CountTypeNoAtomic","cli","count","counter","dump","error","minicount","minicounter","serialize","solid","spectrum","Command","Count","","Csv","Dump","","DumpType","Fasta","Format","MiniCount","","Pcon","Solid","SubCommand","abundance","","","augment_args","","","","augment_args_for_update","","","","augment_subcommands","augment_subcommands_for_update","borrow","","","","","","","borrow_mut","","","","","","","clone","","clone_into","","clone_to_uninit","","cmp","","command","command_for_update","eq","","fmt","","","","","","","format","","from","","","","","","","from_arg_matches","","","","","from_arg_matches_mut","","","","","group_id","","","","has_subcommand","input","inputs","","into","","","","","","","kmer_size","","mini_abundance","minimizer_size","outputs","","","partial_cmp","","quiet","record_buffer","","subcommand","timestamp","to_owned","","to_possible_value","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","","","","update_from_arg_matches_mut","","","","","value_variants","","verbosity","count","Counter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","count_fasta","","","","","default","eq","fmt","from","from_stream","","","","","get","","","","","get_raw","hash","into","k","new","","","","","partial_cmp","raw","serialize","to_owned","try_from","try_into","type_id","dump","DumpTypeFromStr","Err","Error","IO","Log","Ok","Result","TypeNotMatch","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","minicount","MiniCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count_fasta","","","","","default","eq","fmt","from","get","","","","","get_mini","into","k","kmer_raw","m","mini_raw","new","","","","","serialize","to_owned","try_from","try_into","type_id","Serialize","borrow","borrow_mut","csv","","","","","from","into","new","pcon","","","","","solid","","","","","try_from","try_into","type_id","Solid","borrow","borrow_mut","extend","from","from_count","from_path","from_stream","get","get_canonic","into","k","new","set","set_canonic","try_from","try_into","type_id","FirstMinimum","PercentAtLeast","PercentAtMost","Rarefaction","Spectrum","ThresholdMethod","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","eq","fmt","from","","from_count","get_threshold","into","","to_owned","try_from","","try_into","","type_id",""],"q":[[0,"pcon"],[12,"pcon::cli"],[158,"pcon::count"],[159,"pcon::counter"],[201,"pcon::dump"],[202,"pcon::error"],[223,"pcon::minicount"],[224,"pcon::minicounter"],[260,"pcon::serialize"],[284,"pcon::solid"],[302,"pcon::spectrum"],[330,"clap_builder::builder::command"],[331,"core::cmp"],[332,"core::fmt"],[333,"clap_builder::parser::matches::arg_matches"],[334,"clap_builder"],[335,"core::result"],[336,"clap_builder::util::id"],[337,"core::option"],[338,"std::io"],[339,"alloc::boxed"],[340,"alloc::vec"],[341,"stderrlog"],[342,"clap_builder::builder::possible_value"],[343,"core::any"],[344,"core::clone"],[345,"core::default"],[346,"core::hash"],[347,"std::io::error"],[348,"log"],[349,"core::error"],[350,"alloc::string"],[351,"rustc_hash"],[352,"std::path"],[353,"core::convert"],[354,"core::marker"]],"i":"``````````````BbA``1`Ab``211`bhjAl32103216606543210654321545454540054065432132065432106321063210321613206543213222321540320054540654321065432106543210632106321540``Dh0000000000000000000000000000000000000000`FdCd`110`11111111111111``Fn0000000000000000000000000000000000`Fb0000000000000000000000`Gd0000000000000000Gj000``Gl101111110100011010101","f":"``````````````````````````{{{d{b}}}f}{{{d{h}}}f}{{{d{j}}}f}{ll}000000000{d{{d{c}}}{}}000000{{{d{n}}}{{d{nc}}}{}}000000{{{d{A`}}}A`}{{{d{Ab}}}Ab}{{d{d{nc}}}Ad{}}0{{dAf}Ad}0{{{d{A`}}{d{A`}}}Ah}{{{d{Ab}}{d{Ab}}}Ah}{{}l}0{{{d{A`}}{d{A`}}}Aj}{{{d{Ab}}{d{Ab}}}Aj}{{{d{Al}}{d{nAn}}}B`}{{{d{Bb}}{d{nAn}}}B`}{{{d{A`}}{d{nAn}}}B`}{{{d{Ab}}{d{nAn}}}B`}{{{d{b}}{d{nAn}}}B`}{{{d{h}}{d{nAn}}}B`}{{{d{j}}{d{nAn}}}B`}{{{d{b}}}Ab}{{{d{h}}}Ab}{cc{}}000000{{{d{Bd}}}{{Bh{AlBf}}}}{{{d{Bd}}}{{Bh{BbBf}}}}{{{d{Bd}}}{{Bh{bBf}}}}{{{d{Bd}}}{{Bh{hBf}}}}{{{d{Bd}}}{{Bh{jBf}}}}{{{d{nBd}}}{{Bh{AlBf}}}}{{{d{nBd}}}{{Bh{BbBf}}}}{{{d{nBd}}}{{Bh{bBf}}}}{{{d{nBd}}}{{Bh{hBf}}}}{{{d{nBd}}}{{Bh{jBf}}}}{{}{{Bl{Bj}}}}000{{{d{Bn}}}Aj}{{{d{j}}}{{Cd{{Cb{C`}}}}}}{{{d{b}}}{{Cd{{Cb{C`}}}}}}{{{d{h}}}{{Cd{{Cb{C`}}}}}}{{}c{}}000000{{{d{b}}}Af}{{{d{h}}}Cf}{{{d{h}}}f}{{{d{h}}}Af}{{{d{b}}}{{Cl{{Cj{A`{Cd{{Cb{Ch}}}}}}}}}}{{{d{h}}}{{Cl{{Cj{A`{Cd{{Cb{Ch}}}}}}}}}}{{{d{j}}}{{Cl{{Cj{A`{Cd{{Cb{Ch}}}}}}}}}}{{{d{A`}}{d{A`}}}{{Bl{Ah}}}}{{{d{Ab}}{d{Ab}}}{{Bl{Ah}}}}{{{d{Al}}}Aj}{{{d{b}}}Cf}9{AlBb}{{{d{Al}}}Cn}{dc{}}0{{{d{A`}}}{{Bl{D`}}}}{{{d{Ab}}}{{Bl{D`}}}}{c{{Bh{e}}}{}{}}000000{{}{{Bh{c}}}{}}000000{dDb}000000{{{d{nAl}}{d{Bd}}}{{Bh{AdBf}}}}{{{d{nBb}}{d{Bd}}}{{Bh{AdBf}}}}{{{d{nb}}{d{Bd}}}{{Bh{AdBf}}}}{{{d{nh}}{d{Bd}}}{{Bh{AdBf}}}}{{{d{nj}}{d{Bd}}}{{Bh{AdBf}}}}{{{d{nAl}}{d{nBd}}}{{Bh{AdBf}}}}{{{d{nBb}}{d{nBd}}}{{Bh{AdBf}}}}{{{d{nb}}{d{nBd}}}{{Bh{AdBf}}}}{{{d{nh}}{d{nBd}}}{{Bh{AdBf}}}}{{{d{nj}}{d{nBd}}}{{Bh{AdBf}}}}{{}{{d{{Dd{A`}}}}}}{{}{{d{{Dd{Ab}}}}}}{{{d{Al}}}Df}{b{{Cd{Ad}}}}`{d{{d{c}}}{}}{{{d{n}}}{{d{nc}}}{}}{{{d{{Dh{c}}}}}{{Dh{c}}}Dj}{{d{d{nc}}}Ad{}}{{dAf}Ad}{{{d{{Dh{c}}}}{d{{Dh{c}}}}}AhDl}{{{d{n{Dh{Af}}}}{Cb{C`}}Cf}Ad}{{{d{n{Dh{Cf}}}}{Cb{C`}}Cf}Ad}{{{d{n{Dh{Dn}}}}{Cb{C`}}Cf}Ad}{{{d{n{Dh{E`}}}}{Cb{C`}}Cf}Ad}{{{d{n{Dh{Eb}}}}{Cb{C`}}Cf}Ad}{{}{{Dh{c}}}Ed}{{{d{{Dh{c}}}}{d{{Dh{c}}}}}AjEf}{{{d{{Dh{c}}}}{d{nAn}}}B`Eh}{cc{}}{c{{Cd{{Dh{Dn}}}}}Ej}{c{{Cd{{Dh{Af}}}}}Ej}{c{{Cd{{Dh{Cf}}}}}Ej}{c{{Cd{{Dh{E`}}}}}Ej}{c{{Cd{{Dh{Eb}}}}}Ej}{{{d{{Dh{Dn}}}}Cf}Dn}{{{d{{Dh{Cf}}}}Cf}Cf}{{{d{{Dh{Eb}}}}Cf}Eb}{{{d{{Dh{Af}}}}Cf}Af}{{{d{{Dh{E`}}}}Cf}E`}{{{d{{Dh{c}}}}Df}{{d{c}}}{}}{{{d{{Dh{c}}}}{d{ne}}}AdElEn}{{}c{}}{{{d{{Dh{c}}}}}Af{}}{Af{{Dh{Cf}}}}{Af{{Dh{Dn}}}}{Af{{Dh{E`}}}}{Af{{Dh{Af}}}}{Af{{Dh{Eb}}}}{{{d{{Dh{c}}}}{d{{Dh{c}}}}}{{Bl{Ah}}}F`}{{{d{{Dh{c}}}}}{{d{{Dd{c}}}}}{}}{{{Dh{c}}}{{Fb{c}}}{}}{dc{}}{c{{Bh{e}}}{}{}}{{}{{Bh{c}}}{}}{dDb}{j{{Cd{Ad}}}}````````{d{{d{c}}}{}}{{{d{n}}}{{d{nc}}}{}}{{{d{Fd}}{d{nAn}}}B`}0{cc{}}{FfFd}{FhFd}{{}c{}}{{{d{Fd}}}{{Bl{{d{Fj}}}}}}{dFl}<;:{h{{Cd{Ad}}}}`98{{{d{{Fn{ce}}}}}{{Fn{ce}}}DjDj}{{d{d{nc}}}Ad{}}{{dAf}Ad}{{{d{n{Fn{CfCf}}}}{Cb{C`}}Cf}Ad}{{{d{n{Fn{EbEb}}}}{Cb{C`}}Cf}Ad}{{{d{n{Fn{E`E`}}}}{Cb{C`}}Cf}Ad}{{{d{n{Fn{DnDn}}}}{Cb{C`}}Cf}Ad}{{{d{n{Fn{AfAf}}}}{Cb{C`}}Cf}Ad}{{}{{Fn{ce}}}EdEd}{{{d{{Fn{ce}}}}{d{{Fn{ce}}}}}AjEfEf}{{{d{{Fn{ce}}}}{d{nAn}}}B`EhEh}{cc{}}{{{d{{Fn{AfAf}}}}{d{{Dd{Af}}}}}{{d{Af}}}}{{{d{{Fn{EbEb}}}}{d{{Dd{Af}}}}}{{d{Eb}}}}{{{d{{Fn{CfCf}}}}{d{{Dd{Af}}}}}{{d{Cf}}}}{{{d{{Fn{E`E`}}}}{d{{Dd{Af}}}}}{{d{E`}}}}{{{d{{Fn{DnDn}}}}{d{{Dd{Af}}}}}{{d{Dn}}}}{{{d{{Fn{ce}}}}Df}{{d{c}}}{}{G`F`}}{{}c{}}{{{d{{Fn{ce}}}}}Cf{}{G`F`}}{{{d{{Fn{ce}}}}}{{d{{Gb{{Cl{Af}}e}}}}}{}{G`F`}}{{{d{{Fn{ce}}}}}Af{}{G`F`}}{{{d{{Fn{ce}}}}}{{d{{Dd{c}}}}}{}{G`F`}}{{CfAfEb}{{Fn{EbEb}}}}{{CfAfAf}{{Fn{AfAf}}}}{{CfAfDn}{{Fn{DnDn}}}}{{CfAfE`}{{Fn{E`E`}}}}{{CfAfCf}{{Fn{CfCf}}}}{{{d{{Fn{ce}}}}eg}{{Cd{Ad}}}{}{G`F`}Ch}{dc{}}{c{{Bh{e}}}{}{}}{{}{{Bh{c}}}{}}{dDb}`{d{{d{c}}}{}}{{{d{n}}}{{d{nc}}}{}}{{{d{{Fb{Af}}}}Afc}{{Cd{Ad}}}Ch}{{{d{{Fb{Cf}}}}Cfc}{{Cd{Ad}}}Ch}{{{d{{Fb{E`}}}}E`c}{{Cd{Ad}}}Ch}{{{d{{Fb{Dn}}}}Dnc}{{Cd{Ad}}}Ch}{{{d{{Fb{Eb}}}}Ebc}{{Cd{Ad}}}Ch}{cc{}}{{}c{}}{{{Dh{c}}}{{Fb{c}}}{}}{{{d{{Fb{Af}}}}c}{{Cd{Ad}}}Ch}{{{d{{Fb{Cf}}}}c}{{Cd{Ad}}}Ch}{{{d{{Fb{E`}}}}c}{{Cd{Ad}}}Ch}{{{d{{Fb{Eb}}}}c}{{Cd{Ad}}}Ch}{{{d{{Fb{Dn}}}}c}{{Cd{Ad}}}Ch}<;98:{c{{Bh{e}}}{}{}}{{}{{Bh{c}}}{}}{dDb}`{d{{d{c}}}{}}{{{d{n}}}{{d{nc}}}{}}{{{d{nGd}}Gd}Ad}={{Af{d{{Dd{c}}}}c}GdF`}{c{{Cd{Gd}}}{{Gh{Gf}}}}{c{{Cd{Gd}}}Ej}{{{d{Gd}}Cf}Aj}0{{}c{}}{{{d{Gd}}}Af}{AfGd}{{{d{nGd}}CfAj}Ad}0=<;``````::99{{{d{Gj}}}Gj}{{d{d{nc}}}Ad{}}{{dAf}Ad}{{{d{Gj}}{d{Gj}}}Aj}{{{d{Gj}}{d{nAn}}}B`}{cc{}}0{{{d{{Dd{c}}}}}Gl{{Gn{Df}}H`}}{{{d{Gl}}GjHb}{{Bl{Af}}}};;{dc{}}{c{{Bh{e}}}{}{}}0{{}{{Bh{c}}}{}}0{dDb}0","D":"AEd","p":[[5,"Count",12],[1,"reference",null,null,1],[8,"CountTypeNoAtomic",0],[5,"MiniCount",12],[5,"Dump",12],[5,"Command",330],[0,"mut"],[6,"DumpType",12],[6,"Format",12],[1,"unit"],[1,"u8"],[6,"Ordering",331],[1,"bool"],[5,"Command",12],[5,"Formatter",332],[8,"Result",332],[6,"SubCommand",12],[5,"ArgMatches",333],[8,"Error",334],[6,"Result",335,null,1],[5,"Id",336],[6,"Option",337,null,1],[1,"str"],[10,"BufRead",338],[5,"Box",339,null,1],[8,"Result",202],[1,"u64"],[10,"Write",338],[1,"tuple",null,null,1],[5,"Vec",340],[6,"Timestamp",341],[5,"PossibleValue",342],[5,"TypeId",343],[1,"slice"],[1,"usize"],[5,"Counter",159],[10,"Clone",344],[10,"Ord",331],[1,"u16"],[1,"u32"],[1,"u128"],[10,"Default",345],[10,"PartialEq",331],[10,"Debug",332],[10,"Read",338],[10,"Hash",346],[10,"Hasher",346],[10,"PartialOrd",331],[5,"Serialize",260],[6,"Error",202],[5,"Error",347],[5,"SetLoggerError",348],[10,"Error",349],[5,"String",350],[5,"MiniCounter",224],[10,"Display",332],[8,"FxHashMap",351],[5,"Solid",284],[5,"Path",352],[10,"AsRef",353],[6,"ThresholdMethod",302],[5,"Spectrum",302],[10,"Into",353,null,1],[10,"Copy",354],[1,"f64"]],"r":[],"b":[[166,"impl-Counter%3Cu8%3E"],[167,"impl-Counter%3Cu64%3E"],[168,"impl-Counter%3Cu16%3E"],[169,"impl-Counter%3Cu32%3E"],[170,"impl-Counter%3Cu128%3E"],[175,"impl-Counter%3Cu16%3E"],[176,"impl-Counter%3Cu8%3E"],[177,"impl-Counter%3Cu64%3E"],[178,"impl-Counter%3Cu32%3E"],[179,"impl-Counter%3Cu128%3E"],[180,"impl-Counter%3Cu16%3E"],[181,"impl-Counter%3Cu64%3E"],[182,"impl-Counter%3Cu128%3E"],[183,"impl-Counter%3Cu8%3E"],[184,"impl-Counter%3Cu32%3E"],[189,"impl-Counter%3Cu64%3E"],[190,"impl-Counter%3Cu16%3E"],[191,"impl-Counter%3Cu32%3E"],[192,"impl-Counter%3Cu8%3E"],[193,"impl-Counter%3Cu128%3E"],[212,"impl-Debug-for-Error"],[213,"impl-Display-for-Error"],[215,"impl-From%3CError%3E-for-Error"],[216,"impl-From%3CSetLoggerError%3E-for-Error"],[230,"impl-MiniCounter%3Cu64,+u64%3E"],[231,"impl-MiniCounter%3Cu128,+u128%3E"],[232,"impl-MiniCounter%3Cu32,+u32%3E"],[233,"impl-MiniCounter%3Cu16,+u16%3E"],[234,"impl-MiniCounter%3Cu8,+u8%3E"],[239,"impl-MiniCounter%3Cu8,+u8%3E"],[240,"impl-MiniCounter%3Cu128,+u128%3E"],[241,"impl-MiniCounter%3Cu64,+u64%3E"],[242,"impl-MiniCounter%3Cu32,+u32%3E"],[243,"impl-MiniCounter%3Cu16,+u16%3E"],[250,"impl-MiniCounter%3Cu128,+u128%3E"],[251,"impl-MiniCounter%3Cu8,+u8%3E"],[252,"impl-MiniCounter%3Cu16,+u16%3E"],[253,"impl-MiniCounter%3Cu32,+u32%3E"],[254,"impl-MiniCounter%3Cu64,+u64%3E"],[263,"impl-Serialize%3Cu8%3E"],[264,"impl-Serialize%3Cu64%3E"],[265,"impl-Serialize%3Cu32%3E"],[266,"impl-Serialize%3Cu16%3E"],[267,"impl-Serialize%3Cu128%3E"],[271,"impl-Serialize%3Cu8%3E"],[272,"impl-Serialize%3Cu64%3E"],[273,"impl-Serialize%3Cu32%3E"],[274,"impl-Serialize%3Cu128%3E"],[275,"impl-Serialize%3Cu16%3E"],[276,"impl-Serialize%3Cu8%3E"],[277,"impl-Serialize%3Cu64%3E"],[278,"impl-Serialize%3Cu16%3E"],[279,"impl-Serialize%3Cu128%3E"],[280,"impl-Serialize%3Cu32%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKAAFQAeACoAUgAOAHIAAQB5ACQAoQAFAKwAAgC7AAAAwwAAAMYAAwDTAAMA2AABANsABADiAAQA7AACAAEBAwAGAQEAGgECAB4BAQAsAQIANQEIAEQBBgA=","P":[[39,"T"],[53,""],[55,"T"],[57,""],[74,"T"],[81,""],[99,"U"],[106,""],[120,"T"],[122,""],[124,"U,T"],[131,"U"],[138,""],[160,"T"],[164,""],[165,"T"],[166,""],[171,"T"],[175,"R"],[180,""],[185,"T"],[186,"T,__H"],[187,"U"],[188,"T"],[189,""],[194,"T"],[198,"U,T"],[199,"U"],[200,""],[210,"T"],[212,""],[214,"T"],[215,""],[217,"U"],[218,""],[220,"U,T"],[221,"U"],[222,""],[225,"T"],[227,"T,U"],[228,"T"],[229,""],[235,"T,U"],[238,"T"],[239,""],[244,"T,U"],[245,"U"],[246,"T,U"],[250,""],[255,"T,U,W"],[256,"T"],[257,"U,T"],[258,"U"],[259,""],[261,"T"],[263,"W"],[268,"T"],[269,"U"],[270,"T"],[271,"W"],[281,"U,T"],[282,"U"],[283,""],[285,"T"],[287,""],[288,"T"],[290,"P"],[291,"R"],[292,""],[294,"U"],[295,""],[299,"U,T"],[300,"U"],[301,""],[308,"T"],[312,""],[313,"T"],[314,""],[317,"T"],[320,""],[321,"U"],[323,"T"],[324,"U,T"],[326,"U"],[328,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[12158]}